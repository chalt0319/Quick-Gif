{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/Projects/Instagram-Clone/gram/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/admin/Desktop/Projects/Instagram-Clone/gram/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport cuid from 'cuid';\nexport var cuidFn = cuid;\nexport default function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: [],\n    likes: [],\n    comments: [],\n    postComments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_POST':\n      return _objectSpread({}, state, {\n        posts: action.posts\n      });\n\n    case 'LIKE_POST':\n      var filteredLikes = state.likes.filter(function (post) {\n        return post.id !== action.post.id;\n      });\n\n      if (!state.likes.includes(action.post)) {\n        return _objectSpread({}, state, {\n          likes: state.likes.concat(action.post)\n        });\n      } else {\n        return _objectSpread({}, state, {\n          likes: filteredLikes\n        });\n      }\n\n    case 'ADD_COMMENT':\n      var comment = {\n        id: cuid(),\n        text: action.comment,\n        postId: action.post.id\n      };\n\n      if (!state.postComments.includes(action.post)) {\n        return _objectSpread({}, state, {\n          comments: _toConsumableArray(state.comments).concat([comment]),\n          postComments: _toConsumableArray(state.postComments).concat([action.post])\n        });\n      } else {\n        return _objectSpread({}, state, {\n          comments: _toConsumableArray(state.comments).concat([comment])\n        });\n      }\n\n    case 'DELETE_COMMENT':\n      var deletedComments = state.comments.filter(function (comment) {\n        return comment.id !== action.comment.id;\n      });\n      var filteredComments = state.comments.filter(function (comment) {\n        return comment.postId === action.post.id;\n      });\n\n      if (filteredComments.length > 1) {\n        return _objectSpread({}, state, {\n          comments: deletedComments\n        });\n      } else {\n        var filteredPosts = state.postComments.filter(function (post) {\n          return post.id !== action.post.id;\n        });\n        return _objectSpread({}, state, {\n          comments: deletedComments,\n          postComments: filteredPosts\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/admin/Desktop/Projects/Instagram-Clone/gram/client/src/components/reducers/postReducer.js"],"names":["cuid","cuidFn","postReducer","state","posts","likes","comments","postComments","action","type","filteredLikes","filter","post","id","includes","concat","comment","text","postId","deletedComments","filteredComments","length","filteredPosts"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,IAAMC,MAAM,GAAGD,IAAf;AAGP,eAAe,SAASE,WAAT,GAA6F;AAAA,MAAxEC,KAAwE,uEAAhE;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,EAAjC;AAAqCC,IAAAA,YAAY,EAAE;AAAnD,GAAgE;AAAA,MAARC,MAAQ;;AAC1G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAEE,+BAAWN,KAAX;AAAkBC,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAhC;;AAEF,SAAK,WAAL;AAEE,UAAMM,aAAa,GAAGP,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmB,UAAUC,IAAV,EAAgB;AACvD,eAAOA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAA/B;AACD,OAFqB,CAAtB;;AAIA,UAAI,CAACV,KAAK,CAACE,KAAN,CAAYS,QAAZ,CAAqBN,MAAM,CAACI,IAA5B,CAAL,EAAwC;AACtC,iCAAWT,KAAX;AAAkBE,UAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAmBP,MAAM,CAACI,IAA1B;AAAzB;AACD,OAFD,MAEO;AACL,iCAAWT,KAAX;AAAkBE,UAAAA,KAAK,EAAEK;AAAzB;AACD;;AAEH,SAAK,aAAL;AAEE,UAAMM,OAAO,GAAG;AACdH,QAAAA,EAAE,EAAEb,IAAI,EADM;AAEdiB,QAAAA,IAAI,EAAET,MAAM,CAACQ,OAFC;AAGdE,QAAAA,MAAM,EAAEV,MAAM,CAACI,IAAP,CAAYC;AAHN,OAAhB;;AAMA,UAAI,CAACV,KAAK,CAACI,YAAN,CAAmBO,QAAnB,CAA4BN,MAAM,CAACI,IAAnC,CAAL,EAA+C;AAC7C,iCAAWT,KAAX;AAAkBG,UAAAA,QAAQ,qBAAMH,KAAK,CAACG,QAAZ,UAAsBU,OAAtB,EAA1B;AAA0DT,UAAAA,YAAY,qBAAMJ,KAAK,CAACI,YAAZ,UAA0BC,MAAM,CAACI,IAAjC;AAAtE;AACD,OAFD,MAEO;AACL,iCAAWT,KAAX;AAAkBG,UAAAA,QAAQ,qBAAMH,KAAK,CAACG,QAAZ,UAAsBU,OAAtB;AAA1B;AACD;;AAEH,SAAK,gBAAL;AAEE,UAAMG,eAAe,GAAGhB,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsB,UAAUK,OAAV,EAAmB;AAC/D,eAAOA,OAAO,CAACH,EAAR,KAAeL,MAAM,CAACQ,OAAP,CAAeH,EAArC;AACD,OAFuB,CAAxB;AAIA,UAAMO,gBAAgB,GAAGjB,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsB,UAAUK,OAAV,EAAmB;AAChE,eAAOA,OAAO,CAACE,MAAR,KAAmBV,MAAM,CAACI,IAAP,CAAYC,EAAtC;AACD,OAFwB,CAAzB;;AAIE,UAAIO,gBAAgB,CAACC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,iCAAWlB,KAAX;AAAkBG,UAAAA,QAAQ,EAAEa;AAA5B;AACD,OAFD,MAEO;AACL,YAAMG,aAAa,GAAGnB,KAAK,CAACI,YAAN,CAAmBI,MAAnB,CAA0B,UAAUC,IAAV,EAAgB;AAC9D,iBAAOA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAA/B;AACD,SAFqB,CAAtB;AAGA,iCAAWV,KAAX;AAAkBG,UAAAA,QAAQ,EAAEa,eAA5B;AAA6CZ,UAAAA,YAAY,EAAEe;AAA3D;AACD;;AAGL;AACE,aAAOnB,KAAP;AApDJ;AAuDD","sourcesContent":["import cuid from 'cuid';\nexport const cuidFn = cuid;\n\n\nexport default function postReducer(state = {posts: [], likes: [], comments: [], postComments: []}, action) {\n  switch (action.type) {\n    case 'ADD_POST':\n\n      return {...state, posts: action.posts}\n\n    case 'LIKE_POST':\n\n      const filteredLikes = state.likes.filter(function (post) {\n        return post.id !== action.post.id\n      })\n\n      if (!state.likes.includes(action.post)) {\n        return {...state, likes: state.likes.concat(action.post)}\n      } else {\n        return {...state, likes: filteredLikes}\n      }\n\n    case 'ADD_COMMENT':\n\n      const comment = {\n        id: cuid(),\n        text: action.comment,\n        postId: action.post.id\n      }\n\n      if (!state.postComments.includes(action.post)) {\n        return {...state, comments: [...state.comments, comment], postComments: [...state.postComments, action.post]}\n      } else {\n        return {...state, comments: [...state.comments, comment]}\n      }\n\n    case 'DELETE_COMMENT':\n\n      const deletedComments = state.comments.filter(function (comment) {\n        return comment.id !== action.comment.id\n      })\n\n      const filteredComments = state.comments.filter(function (comment) {\n        return comment.postId === action.post.id\n      })\n\n        if (filteredComments.length > 1) {\n          return {...state, comments: deletedComments}\n        } else {\n          const filteredPosts = state.postComments.filter(function (post) {\n            return post.id !== action.post.id\n          })\n          return {...state, comments: deletedComments, postComments: filteredPosts}\n        }\n\n\n    default:\n      return state\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}