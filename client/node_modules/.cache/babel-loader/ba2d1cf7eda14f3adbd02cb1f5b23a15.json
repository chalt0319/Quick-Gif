{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/Projects/Instagram-Clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/admin/Desktop/Projects/Instagram-Clone/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport cuid from 'cuid';\nexport var cuidFn = cuid;\nexport default function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: [],\n    likes: [],\n    comments: [],\n    postComments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_POST':\n      console.log(action.posts);\n      return _objectSpread({}, state, {\n        posts: action.posts\n      });\n\n    case 'LIKE_POST':\n      return _objectSpread({}, state, {\n        likes: state.likes.concat(action.post)\n      });\n\n    case 'ADD_COMMENT':\n      var comment = {\n        id: cuid(),\n        text: action.comment,\n        postId: action.post.id\n      };\n\n      if (!state.postComments.includes(action.post)) {\n        return _objectSpread({}, state, {\n          comments: _toConsumableArray(state.comments).concat([comment]),\n          postComments: _toConsumableArray(state.postComments).concat([action.post])\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/admin/Desktop/Projects/Instagram-Clone/src/components/reducers/postReducer.js"],"names":["cuid","cuidFn","postReducer","state","posts","likes","comments","postComments","action","type","console","log","concat","post","comment","id","text","postId","includes"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,IAAMC,MAAM,GAAGD,IAAf;AAGP,eAAe,SAASE,WAAT,GAA6F;AAAA,MAAxEC,KAAwE,uEAAhE;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,EAAjC;AAAqCC,IAAAA,YAAY,EAAE;AAAnD,GAAgE;AAAA,MAARC,MAAQ;;AAC1G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAEEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,KAAnB;AACA,+BAAWD,KAAX;AAAkBC,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAhC;;AAEF,SAAK,WAAL;AAEE,+BAAWD,KAAX;AAAkBE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYO,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B;AAAzB;;AAEF,SAAK,aAAL;AAEE,UAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEf,IAAI,EADM;AAEdgB,QAAAA,IAAI,EAAER,MAAM,CAACM,OAFC;AAGdG,QAAAA,MAAM,EAAET,MAAM,CAACK,IAAP,CAAYE;AAHN,OAAhB;;AAKA,UAAI,CAACZ,KAAK,CAACI,YAAN,CAAmBW,QAAnB,CAA4BV,MAAM,CAACK,IAAnC,CAAL,EAA+C;AAC7C,iCAAWV,KAAX;AAAkBG,UAAAA,QAAQ,qBAAMH,KAAK,CAACG,QAAZ,UAAsBQ,OAAtB,EAA1B;AAA0DP,UAAAA,YAAY,qBAAMJ,KAAK,CAACI,YAAZ,UAA0BC,MAAM,CAACK,IAAjC;AAAtE;AACD;;AAKH;AACE,aAAOV,KAAP;AAzBJ;AA4BD","sourcesContent":["import cuid from 'cuid';\nexport const cuidFn = cuid;\n\n\nexport default function postReducer(state = {posts: [], likes: [], comments: [], postComments: []}, action) {\n  switch (action.type) {\n    case 'ADD_POST':\n\n      console.log(action.posts)\n      return {...state, posts: action.posts}\n\n    case 'LIKE_POST':\n\n      return {...state, likes: state.likes.concat(action.post)}\n\n    case 'ADD_COMMENT':\n\n      const comment = {\n        id: cuid(),\n        text: action.comment,\n        postId: action.post.id\n      }\n      if (!state.postComments.includes(action.post)) {\n        return {...state, comments: [...state.comments, comment], postComments: [...state.postComments, action.post]}\n      }\n\n\n\n\n    default:\n      return state\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}