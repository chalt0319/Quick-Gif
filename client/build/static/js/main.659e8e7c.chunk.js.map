{"version":3,"sources":["components/containers/SearchInput.js","components/containers/Instagram.js","components/stateless/Like.js","components/stateless/Title.js","components/containers/CommentForm.js","components/stateless/Delete.js","components/stateless/Comment.js","components/stateless/Post.js","components/stateless/Posts.js","components/containers/PostsContainer.js","App.js","serviceWorker.js","components/reducers/postReducer.js","components/stateless/Likes.js","components/containers/LikesContainer.js","components/stateless/Comments.js","components/containers/CommentContainer.js","index.js"],"names":["SearchInput","state","text","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","searchBar","react_default","a","createElement","className","onSubmit","this","type","onChange","Component","Instagram","searchText","word","fetch","then","response","json","data","dispatch","posts","scrollUp","document","body","scrollTop","documentElement","apifetch","console","log","_this2","Link","to","id","src","alt","SearchInput_SearchInput","onClick","connect","Like","handleClick","post","Title","title","CommentForm","comment","size","placeholder","Comment","showComments","comments","filter","postId","map","Fragment","key","Delete","containers_CommentForm","Post","Title_Title","images","original","url","slug","stateless_Like","stateless_Comment","Posts","showPosts","Post_Post","PostsContainer","Posts_Posts","App","containers_Instagram","containers_PostsContainer","Boolean","window","location","hostname","match","cuid","Likes","showLikes","likes","LikesContainer","Likes_Likes","Comments","postComments","Comments_Comments","store","createStore","arguments","length","undefined","action","Object","objectSpread","includes","concat","toConsumableArray","deletedComments","filteredPosts","ReactDOM","render","es","BrowserRouter","Route","exact","path","component","CommentContainer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.659e8e7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchInput extends Component {\n\n  state = {\n    text: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.searchBar(this.state.text)\n  }\n\n  render() {\n\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" onChange={this.handleChange}></input><span>  </span>\n        <input type=\"submit\" value=\"Search\"></input>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SearchInput from './SearchInput'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\nclass Instagram extends Component {\n\n  state = {\n    searchText: \"\"\n  }\n\n  componentDidMount() {\n    fetch('http://api.giphy.com/v1/gifs/search?q=funny&api_key=dc6zaTOxFJmzC&rating=g')\n      .then(response => response.json())\n      .then(data => {this.props.dispatch({type: 'ADD_POST', posts: data['data']})})\n  }\n\n  searchBar = (word) => {\n    fetch('http://api.giphy.com/v1/gifs/search?q=' + word + '&api_key=dc6zaTOxFJmzC&rating=g')\n      .then(response => response.json())\n      .then(data => {this.props.dispatch({type: 'ADD_POST', posts: data['data']})})\n  }\n\n  scrollUp = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  apifetch = () => {\n    fetch('/users')\n      .then(response => console.log(response.text()))\n      // .then(data => console.log(data))\n\n  }\n\n  render() {\n\n    return (\n      <div>\n      <Link to='/'>\n        <img id=\"home\" src='http://images.clipartpanda.com/stick-family-clipart-black-and-white-white-house-md.png' alt=\"Home\"/>\n      </Link>\n      <Link to='/likes'>\n        <img id=\"heart\" src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png' alt=\"Heart\"/>\n      </Link>\n      <Link to='/comments'>\n        <img id=\"comment\" src='http://www.clker.com/cliparts/e/D/y/m/U/t/speech-bubble-hi.png' alt=\"Comment\"/>\n      </Link>\n      <SearchInput searchBar={this.searchBar}/>\n      <img id=\"scroll\" onClick={this.scrollUp} src='https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-up-01-512.png' alt=\"scroll\"/>\n      <h1 onClick={this.apifetch}>Hi</h1>\n      </div>\n    );\n  }\n}\n\n\n\nexport default connect()(Instagram)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Like extends Component {\n\n  handleClick = () => {\n    this.props.dispatch({type: 'LIKE_POST', post: this.props.post})\n  }\n\n  render() {\n\n    return (\n\n        <img className=\"heart\" onClick={this.handleClick} src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png' alt=\"Heart\"/>\n\n    );\n  }\n}\n\nexport default connect()(Like)\n","import React, { Component } from 'react';\n\nexport default class Title extends Component {\n\n  render() {\n\n    return (\n      <div className=\"title\">\n      {this.props.title}\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentForm extends Component {\n\n  state = {\n    text: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  handleClick = () => {\n    this.props.dispatch({type: 'ADD_COMMENT', comment: this.state.text, post: this.props.post})\n    this.setState({\n      text: \"\"\n    })\n  }\n\n  render() {\n\n    return (\n      <span>\n        <input onChange={this.handleChange} type=\"text\" value={this.state.text} size=\"59\" placeholder=\"Add a comment\"></input>\n        <input type='image' className='comment' onClick={this.handleClick} src='http://www.clker.com/cliparts/e/D/y/m/U/t/speech-bubble-hi.png' alt='comment'></input>\n      </span>\n    );\n  }\n}\n\nexport default connect()(CommentForm)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Like extends Component {\n\n  handleClick = () => {\n    this.props.dispatch({type: 'DELETE_COMMENT', comment: this.props.comment, post: this.props.post})\n  }\n\n  render() {\n\n    return (\n\n        <img className='delete' onClick={this.handleClick} src='https://image.flaticon.com/icons/png/512/61/61918.png' alt='Delete'/>\n\n    );\n  }\n}\n\nexport default connect()(Like)\n","import React, { Component } from 'react';\nimport CommentForm from '../containers/CommentForm'\nimport Delete from './Delete'\nimport { connect } from 'react-redux';\n\n\nclass Comment extends Component {\n\n  showComments = (post) => {\n    if (this.props.comments !== []) {\n      const comments = this.props.comments.filter(function (comment) {\n        return comment.postId === post.id\n      })\n      return comments.map(function (comment) {\n        return <React.Fragment key={comment.id} ><li className='comment-li'>{comment.text}</li><Delete comment={comment} post={post}/></React.Fragment>\n      })\n    }\n  }\n\n\n  render() {\n\n    return (\n      <span className='comment-form'>\n        <CommentForm post={this.props.post}/>\n        <ul>\n          {this.showComments(this.props.post)}\n        </ul>\n      </span>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n  }\n}\n\n\nexport default connect(mapStateToProps)(Comment)\n","import React, { Component } from 'react';\nimport Like from './Like'\nimport Title from './Title'\nimport Comment from './Comment'\n\nexport default class Post extends Component {\n\n  render() {\n\n    return (\n        <div className=\"image-box\">\n          <Title title={this.props.post.title}/>\n          <img className=\"post-image\" src={this.props.post.images.original.url} alt={this.props.post.slug}/>\n          <span><Like post={this.props.post}/>\n          <Comment post={this.props.post}/></span>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Post from './Post'\n\nexport default class Posts extends Component {\n\n  showPosts = () => {\n    return this.props.posts.map(function (post) {\n      return <Post key={post.id} post={post}/>\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"image-feed\">\n        {this.showPosts()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Posts from '../stateless/Posts'\nimport { connect } from 'react-redux';\n\nclass PostsContainer extends Component {\n  render() {\n\n    return (\n      <div>\n        <h2 id='posts-header'>All Posts:</h2>\n        <Posts posts={this.props.posts}/>\n        <img id=\"pikachu\" src='https://camo.githubusercontent.com/9be29021cfdb21b2cc257a3efcb269f64d42f5b6/687474703a2f2f32352e6d656469612e74756d626c722e636f6d2f63393961353739646233616530666331363462663463636131343838383564332f74756d626c725f6d6a6776386b45754d67317338376e37396f315f3430302e676966' alt=\"Pikachu\"/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n  }\n}\n\nexport default connect(mapStateToProps)(PostsContainer)\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Instagram from './components/containers/Instagram'\nimport PostsContainer from './components/containers/PostsContainer'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Instagram />\n        </header>\n        <PostsContainer />\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import cuid from 'cuid';\nexport const cuidFn = cuid;\n\n\nexport default function postReducer(state = {posts: [], likes: [], comments: [], postComments: []}, action) {\n  switch (action.type) {\n    case 'ADD_POST':\n\n      console.log(action.posts)\n      return {...state, posts: action.posts}\n\n    case 'LIKE_POST':\n\n      if (!state.likes.includes(action.post)) {\n        return {...state, likes: state.likes.concat(action.post)}\n      } else {\n        return {...state}\n      }\n\n    case 'ADD_COMMENT':\n\n      const comment = {\n        id: cuid(),\n        text: action.comment,\n        postId: action.post.id\n      }\n\n      if (!state.postComments.includes(action.post)) {\n        return {...state, comments: [...state.comments, comment], postComments: [...state.postComments, action.post]}\n      } else {\n        return {...state, comments: [...state.comments, comment]}\n      }\n\n    case 'DELETE_COMMENT':\n\n      const deletedComments = state.comments.filter(function (comment) {\n        return comment.id !== action.comment.id\n      })\n\n      const filteredComments = state.comments.filter(function (comment) {\n        return comment.postId === action.post.id\n      })\n\n        if (filteredComments.length > 1) {\n          return {...state, comments: deletedComments}\n        } else {\n          const filteredPosts = state.postComments.filter(function (post) {\n            return post.id !== action.post.id\n          })\n          return {...state, comments: deletedComments, postComments: filteredPosts}\n        }\n\n\n    default:\n      return state\n  }\n\n}\n","import React, { Component } from 'react';\nimport Post from './Post'\n\nexport default class Likes extends Component {\n\n  showLikes = () => {\n    return this.props.likes.map(function (post) {\n      return <Post key={post.id} post={post}/>\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2 id='likes-header'>Liked Posts:</h2>\n        <div className=\"image-feed\">\n          {this.showLikes()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Likes from '../stateless/Likes'\nimport { connect } from 'react-redux';\nimport Instagram from './Instagram'\n\nclass LikesContainer extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Instagram />\n        </header>\n        <Likes likes={this.props.likes}/>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    likes: state.likes,\n  }\n}\n\nexport default connect(mapStateToProps)(LikesContainer)\n","import React, { Component } from 'react';\nimport Post from './Post'\n\nexport default class Comments extends Component {\n\n  showPosts = () => {\n    return this.props.postComments.map(function (post) {\n      return <Post key={post.id} post={post}/>\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2 id='commented-header'>Commented Posts:</h2>\n        <div className=\"image-feed\">\n          {this.showPosts()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Comments from '../stateless/Comments'\nimport { connect } from 'react-redux';\nimport Instagram from './Instagram'\n\nclass LikesContainer extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Instagram />\n        </header>\n        <Comments postComments={this.props.postComments} />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    postComments: state.postComments\n  }\n}\n\nexport default connect(mapStateToProps)(LikesContainer)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport postReducer from './components/reducers/postReducer'\nimport LikesContainer from './components/containers/LikesContainer'\nimport CommentContainer from './components/containers/CommentContainer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst store = createStore(postReducer);\n\nReactDOM.render((\n  <Provider store={store}>\n    <Router>\n      <React.Fragment>\n         <Route exact path=\"/\" component={App} />\n         <Route exact path=\"/likes\" component={LikesContainer} />\n         <Route exact path=\"/comments\" component={CommentContainer} />\n      </React.Fragment>\n    </Router>\n </Provider>),\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}